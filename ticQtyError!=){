[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/Adapters/FeaturePlacesRecyclerViewAdapter.kt b/app/src/main/java/com/oymj/greenearthhero/Adapters/FeaturePlacesRecyclerViewAdapter.kt[m
[1mdeleted file mode 100644[m
[1mindex c92386e..0000000[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/Adapters/FeaturePlacesRecyclerViewAdapter.kt[m
[1m+++ /dev/null[m
[36m@@ -1,57 +0,0 @@[m
[31m-package com.oymj.greenearthhero.adapters[m
[31m-[m
[31m-import android.content.Context[m
[31m-import android.view.LayoutInflater[m
[31m-import android.view.View[m
[31m-import android.view.ViewGroup[m
[31m-import androidx.recyclerview.widget.RecyclerView[m
[31m-import com.oymj.greenearthhero.R[m
[31m-import com.oymj.greenearthhero.RecyclerViewOnItemClickListener[m
[31m-import com.oymj.greenearthhero.data.FeaturePlaces[m
[31m-import com.oymj.greenearthhero.data.TomTomPlacesResult[m
[31m-import com.oymj.greenearthhero.utils.RippleUtil[m
[31m-import kotlinx.android.synthetic.main.listitem_feature_places.view.*[m
[31m-[m
[31m-class FeaturePlacesRecyclerViewAdapter(val data : ArrayList<TomTomPlacesResult>, val context: Context, val onItemClickListener: RecyclerViewOnItemClickListener) : RecyclerView.Adapter<ViewHolder>() {[m
[31m-[m
[31m-    // Gets the number of animals in the list[m
[31m-    override fun getItemCount(): Int {[m
[31m-        return data.size[m
[31m-    }[m
[31m-[m
[31m-    // Inflates the item views[m
[31m-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {[m
[31m-        return ViewHolder(LayoutInflater.from(context).inflate(R.layout.listitem_feature_places, parent, false))[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-    override fun onBindViewHolder(holder: ViewHolder, position: Int) {[m
[31m-        var currentData = data[position][m
[31m-[m
[31m-        //set data[m
[31m-        holder.tvLocationTitle.text = currentData.address?.street?:currentData.address?.taman[m
[31m-        holder.tvDistance.text = "10 km"[m
[31m-        holder.tvAddress.text = currentData.address?.fullAddress[m
[31m-[m
[31m-        //set ripple background[m
[31m-        holder.mainContainer.background = RippleUtil.getRippleButtonOutlineDrawable(holder.mainContainer.context,[m
[31m-            holder.mainContainer.context.resources.getColor(R.color.transparent),[m
[31m-            holder.mainContainer.context.resources.getColor(R.color.transparent_pressed),[m
[31m-            holder.mainContainer.context.resources.getColor(R.color.transparent),[m
[31m-            0f,0[m
[31m-        )[m
[31m-[m
[31m-        holder.mainContainer.setOnClickListener{[m
[31m-            onItemClickListener.onItemClick(data[position])[m
[31m-        }[m
[31m-[m
[31m-    }[m
[31m-}[m
[31m-[m
[31m-class ViewHolder (view: View) : RecyclerView.ViewHolder(view) {[m
[31m-[m
[31m-    val mainContainer = view.mainContainer[m
[31m-    val tvLocationTitle = view.tvLocationTitle[m
[31m-    val tvDistance = view.tvDistance[m
[31m-    val tvAddress = view.tvAddress[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/Adapters/IntroSliderAdapter.kt b/app/src/main/java/com/oymj/greenearthhero/Adapters/IntroSliderAdapter.kt[m
[1mindex 69a3f71..5e4f454 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/Adapters/IntroSliderAdapter.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/Adapters/IntroSliderAdapter.kt[m
[36m@@ -1,13 +1,12 @@[m
[31m-package com.oymj.greenearthhero.Adapters[m
[32m+[m[32mpackage com.oymj.greenearthhero.adapters[m
 [m
 import android.view.LayoutInflater[m
 import android.view.View[m
 import android.view.ViewGroup[m
[31m-import android.widget.ImageView[m
 import android.widget.TextView[m
 import androidx.recyclerview.widget.RecyclerView[m
 import com.airbnb.lottie.LottieAnimationView[m
[31m-import com.oymj.greenearthhero.Models.IntroSlide[m
[32m+[m[32mimport com.oymj.greenearthhero.models.IntroSlide[m
 import com.oymj.greenearthhero.R[m
 [m
 class IntroSliderAdapter(private val introSlide: List<IntroSlide>) :[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/Models/IntroSlide.kt b/app/src/main/java/com/oymj/greenearthhero/Models/IntroSlide.kt[m
[1mindex f313b64..4228757 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/Models/IntroSlide.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/Models/IntroSlide.kt[m
[36m@@ -1,4 +1,4 @@[m
[31m-package com.oymj.greenearthhero.Models[m
[32m+[m[32mpackage com.oymj.greenearthhero.models[m
 [m
 data class IntroSlide([m
     val title: String,[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/Models/SharedPreference.kt b/app/src/main/java/com/oymj/greenearthhero/Models/SharedPreference.kt[m
[1mindex 5b8f6f5..d189298 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/Models/SharedPreference.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/Models/SharedPreference.kt[m
[36m@@ -1,4 +1,4 @@[m
[31m-package com.oymj.greenearthhero.Models[m
[32m+[m[32mpackage com.oymj.greenearthhero.models[m
 [m
 import android.content.Context[m
 import android.content.SharedPreferences[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/RecyclerViewOnItemClickListener.kt b/app/src/main/java/com/oymj/greenearthhero/RecyclerViewOnItemClickListener.kt[m
[1mdeleted file mode 100644[m
[1mindex a8c2c9e..0000000[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/RecyclerViewOnItemClickListener.kt[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-package com.oymj.greenearthhero[m
[31m-[m
[31m-import android.view.View[m
[31m-[m
[31m-interface RecyclerViewOnItemClickListener {[m
[31m-    open fun onItemClick(data: Any):Unit[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/Utils/FirebaseUtil.kt b/app/src/main/java/com/oymj/greenearthhero/Utils/FirebaseUtil.kt[m
[1mindex 2396a53..5e68c4a 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/Utils/FirebaseUtil.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/Utils/FirebaseUtil.kt[m
[36m@@ -1,7 +1,8 @@[m
[31m-package com.oymj.greenearthhero.Utils[m
[32m+[m[32mpackage com.oymj.greenearthhero.utils[m
 [m
 import android.content.Context[m
 import android.content.Intent[m
[32m+[m[32mimport androidx.appcompat.app.AppCompatActivity[m
 import com.google.firebase.auth.FirebaseAuth[m
 import com.oymj.greenearthhero.ui.activity.LoginActivity[m
 [m
[36m@@ -11,6 +12,7 @@[m [mobject FirebaseUtil {[m
         return if(FirebaseAuth.getInstance().currentUser?.uid != null){[m
             FirebaseAuth.getInstance().currentUser?.uid[m
         }else{[m
[32m+[m[32m            (context as AppCompatActivity).finish()[m
             context.startActivity(Intent(context, LoginActivity::class.java))[m
             null[m
         }[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/Utils/FormUtils.kt b/app/src/main/java/com/oymj/greenearthhero/Utils/FormUtils.kt[m
[1mindex 260d9b0..9d68248 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/Utils/FormUtils.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/Utils/FormUtils.kt[m
[36m@@ -1,4 +1,6 @@[m
[31m-package com.oymj.greenearthhero.Utils[m
[32m+[m[32mpackage com.oymj.greenearthhero.utils[m
[32m+[m
[32m+[m[32mimport java.util.regex.Pattern[m
 [m
 object FormUtils {[m
 [m
[36m@@ -8,7 +10,7 @@[m [mobject FormUtils {[m
             error = "$name cannot be empty!"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
         }[m
     }[m
 [m
[36m@@ -18,7 +20,7 @@[m [mobject FormUtils {[m
             error = "$name must have character amount between $minLength and $maxLength!"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
         }[m
     }[m
 [m
[36m@@ -30,7 +32,7 @@[m [mobject FormUtils {[m
             error = "$name can only contain alphabet character"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
         }[m
     }[m
 [m
[36m@@ -42,7 +44,7 @@[m [mobject FormUtils {[m
             error = "$name can only contain number"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
         }[m
     }[m
 [m
[36m@@ -53,7 +55,15 @@[m [mobject FormUtils {[m
             error = "Email is not valid"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    fun isMatchRegex(input:String, regex:String, errorMessage:String): String?{[m
[32m+[m[32m        return if(!Pattern.compile(regex).matcher(input).matches()){[m
[32m+[m[32m            errorMessage[m
[32m+[m[32m        }else{[m
[32m+[m[32m            ""[m
         }[m
     }[m
 [m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/Utils/LocationUtils.kt b/app/src/main/java/com/oymj/greenearthhero/Utils/LocationUtils.kt[m
[1mindex e05034c..99fcdca 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/Utils/LocationUtils.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/Utils/LocationUtils.kt[m
[36m@@ -1,4 +1,4 @@[m
[31m-package com.oymj.greenearthhero.Utils[m
[32m+[m[32mpackage com.oymj.greenearthhero.utils[m
 [m
 import android.content.Context[m
 import android.location.Location[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/Utils/LottieUtils.kt b/app/src/main/java/com/oymj/greenearthhero/Utils/LottieUtils.kt[m
[1mindex 303eb8f..4c6b192 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/Utils/LottieUtils.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/Utils/LottieUtils.kt[m
[36m@@ -1,4 +1,4 @@[m
[31m-package com.oymj.greenearthhero.Utils[m
[32m+[m[32mpackage com.oymj.greenearthhero.utils[m
 [m
 import android.os.Handler[m
 import com.airbnb.lottie.LottieAnimationView[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/Utils/PermissionManager.kt b/app/src/main/java/com/oymj/greenearthhero/Utils/PermissionManager.kt[m
[1mindex b9ac795..9053326 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/Utils/PermissionManager.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/Utils/PermissionManager.kt[m
[36m@@ -1,4 +1,4 @@[m
[31m-package com.oymj.greenearthhero.Utils[m
[32m+[m[32mpackage com.oymj.greenearthhero.utils[m
 [m
 import android.Manifest[m
 import android.app.Activity[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/ui/activity/RecycleActivity.kt b/app/src/main/java/com/oymj/greenearthhero/ui/activity/RecycleActivity.kt[m
[1mindex 3914f42..0fafb5d 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/ui/activity/RecycleActivity.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/ui/activity/RecycleActivity.kt[m
[36m@@ -19,26 +19,29 @@[m [mimport android.widget.Toast[m
 import androidx.appcompat.app.AppCompatActivity[m
 import androidx.constraintlayout.widget.ConstraintLayout[m
 import com.google.android.material.bottomsheet.BottomSheetBehavior[m
[32m+[m[32mimport com.google.firebase.firestore.FirebaseFirestore[m
[32m+[m[32mimport com.google.firebase.firestore.GeoPoint[m
 import com.mapbox.mapboxsdk.camera.CameraPosition[m
 import com.mapbox.mapboxsdk.camera.CameraUpdateFactory[m
 import com.mapbox.mapboxsdk.geometry.LatLng[m
 import com.mapbox.mapboxsdk.location.modes.RenderMode[m
 import com.mapbox.mapboxsdk.maps.MapboxMap[m
[32m+[m[32mimport com.mapbox.mapboxsdk.plugins.annotation.OnSymbolDragListener[m
 import com.mapbox.mapboxsdk.plugins.annotation.Symbol[m
 import com.mapbox.mapboxsdk.plugins.annotation.SymbolManager[m
 import com.mapbox.mapboxsdk.plugins.annotation.SymbolOptions[m
 import com.oymj.greenearthhero.R[m
 import com.oymj.greenearthhero.api.ApisImplementation[m
[31m-import com.oymj.greenearthhero.utils.LocationUtils[m
[31m-import com.oymj.greenearthhero.data.FeaturePlaces[m
 import com.oymj.greenearthhero.data.TomTomPlacesResult[m
[32m+[m[32mimport com.oymj.greenearthhero.ui.dialog.ErrorDialog[m
[32m+[m[32mimport com.oymj.greenearthhero.ui.dialog.LoadingDialog[m
[32m+[m[32mimport com.oymj.greenearthhero.ui.dialog.SuccessDialog[m
 import com.oymj.greenearthhero.ui.fragment.SearchAddressResultFragment[m
[31m-import com.oymj.greenearthhero.utils.MapboxManager[m
[32m+[m[32mimport com.oymj.greenearthhero.utils.*[m
 import com.oymj.greenearthhero.utils.MapboxManager.getMapBoxStyle[m
[31m-import com.oymj.greenearthhero.utils.RippleUtil[m
[31m-[m
 import kotlinx.android.synthetic.main.activity_recycle.*[m
[31m-[m
[32m+[m[32mimport java.text.SimpleDateFormat[m
[32m+[m[32mimport java.util.*[m
 [m
 [m
 class RecycleActivity : AppCompatActivity() {[m
[36m@@ -51,22 +54,14 @@[m [mclass RecycleActivity : AppCompatActivity() {[m
     private var currentBottomSheetState = BottomSheetBehavior.STATE_COLLAPSED[m
     private var isLocationPanelOpened = false[m
 [m
[31m-[m
[31m-[m
[31m-    lateinit var locationManager: LocationManager[m
[31m-    private var hasGps = false[m
[31m-    private var hasNetwork = false[m
[31m-    private var locationGps: Location? = null[m
[31m-    private var locationNetwork: Location? = null[m
[31m-    private var accurateLocation: Location? = null[m
[31m-[m
     //Better control of onClickListener[m
     //all button action will be registered here[m
     private var myOnClickListener = object: View.OnClickListener {[m
         override fun onClick(v: View?) {[m
             when (v) {[m
                 recycle_expanded_closebtn -> {[m
[31m-                    myBottomSheetBehavior.state = BottomSheetBehavior.STATE_COLLAPSED[m
[32m+[m[32m                    if(syncMaterialInfoWithEditText())[m
[32m+[m[32m                        myBottomSheetBehavior.state = BottomSheetBehavior.STATE_COLLAPSED[m
                 }[m
                 recycle_menu_icon -> {[m
                     var intent = Intent(this@RecycleActivity, MenuActivity::class.java)[m
[36m@@ -102,6 +97,9 @@[m [mclass RecycleActivity : AppCompatActivity() {[m
                 btnMyVolunteer -> {[m
 [m
                 }[m
[32m+[m[32m                btnRecycleNow -> {[m
[32m+[m[32m                    sendRecycleRequestToFirebase()[m
[32m+[m[32m                }[m
 [m
             }[m
         }[m
[36m@@ -113,7 +111,6 @@[m [mclass RecycleActivity : AppCompatActivity() {[m
         setContentView(R.layout.activity_recycle)[m
 [m
         linkAllButtonWithOnClickListener()[m
[31m-        syncMaterialInfoWithEditText()[m
 [m
         setupUI()[m
 [m
[36m@@ -278,6 +275,25 @@[m [mclass RecycleActivity : AppCompatActivity() {[m
                 .withIconImage(MapboxManager.ID_LOCATION_ICON)[m
                 .withIconSize(2f)[m
                 .withDraggable(true))[m
[32m+[m
[32m+[m[32m            mapBoxMapSymbolManager.addDragListener(object: OnSymbolDragListener{[m
[32m+[m[32m                override fun onAnnotationDragStarted(annotation: Symbol?) {[m
[32m+[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                override fun onAnnotationDrag(annotation: Symbol?) {[m
[32m+[m
[32m+[m[32m                }[m
[32m+[m
[32m+[m[32m                override fun onAnnotationDragFinished(annotation: Symbol?) {[m
[32m+[m[32m                    currentPinnedLocation!!.latLong?.lat = annotation?.latLng?.latitude!![m
[32m+[m[32m                    currentPinnedLocation!!.latLong?.lon = annotation?.latLng?.longitude!![m
[32m+[m
[32m+[m[32m                    updateFeaturePlaceAddressWithLatLong(currentPinnedLocation!!)[m
[32m+[m[32m                }[m
[32m+[m[32m            })[m
[32m+[m
[32m+[m
         }else{[m
             //change the location of the pin[m
             currentPinnedLocationSymbol.latLng = LatLng(LatLng(data.latLong?.lat!!,data.latLong?.lon!!))[m
[36m@@ -296,23 +312,97 @@[m [mclass RecycleActivity : AppCompatActivity() {[m
     }[m
 [m
     fun updateFeaturePlaceAddressWithLatLong(location:TomTomPlacesResult){[m
[32m+[m[32m        var loadingDialog = LoadingDialog(this)[m
[32m+[m[32m        loadingDialog.show()[m
[32m+[m
         ApisImplementation().reverseGeocodingFromTomTom(this,location.latLong?.lat!!,location.latLong?.lon!!,callback = {[m
             success,response->[m
             if(success){[m
[32m+[m[32m                loadingDialog.hide()[m
[32m+[m
                 var address = response!!.addressResult!![0].address[m
 [m
[32m+[m[32m                //if no name found[m
[32m+[m[32m                if(address?.fullAddress == null){[m
[32m+[m[32m                    address?.fullAddress = "Unnamed Place"[m
[32m+[m[32m                }[m
[32m+[m
                 location.address = address[m
 [m
                 recycle_request_location_label.text = address?.fullAddress[m
 [m
             }else{[m
[32m+[m[32m                loadingDialog.hide()[m
 [m
[32m+[m[32m                var errorDialog = ErrorDialog(this,"Error", "We have encountered some error when updating address with Latitude and Longitude!")[m
[32m+[m[32m                errorDialog.show()[m
             }[m
         })[m
     }[m
 [m
[32m+[m[32m    private fun sendRecycleRequestToFirebase(){[m
[32m+[m
[32m+[m[32m        if(currentPinnedLocation != null){[m
[32m+[m[32m            var metalAmount = recycle_metal_info_textview.text.toString().replace("KG","").trim().toInt()[m
[32m+[m[32m            var glassAmount = recycle_glass_info_textview.text.toString().replace("KG","").trim().toInt()[m
[32m+[m[32m            var paperAmount = recycle_paper_info_textview.text.toString().replace("KG","").trim().toInt()[m
[32m+[m[32m            var plasticAmount = recycle_plastic_info_textview.text.toString().replace("KG","").trim().toInt()[m
[32m+[m[32m            var address = currentPinnedLocation!!.address!!.fullAddress[m
[32m+[m[32m            var latLong = currentPinnedLocation!!.latLong[m
[32m+[m
[32m+[m[32m            var totalAmount = metalAmount+glassAmount+paperAmount+plasticAmount[m
[32m+[m[32m            if(totalAmount > 0){[m
[32m+[m
[32m+[m[32m                val dateFormat = SimpleDateFormat("yyyy-MM-dd HH:mm:ss")[m
[32m+[m[32m                val currentDateTime: String = dateFormat.format(Date()) // Find todays date[m
[32m+[m
[32m+[m
[32m+[m[32m                //create a firebase document[m
[32m+[m[32m                val recycleRequestDocument = hashMapOf([m
[32m+[m[32m                    "userId" to FirebaseUtil.getUserIdAndRedirectToLoginIfNotFound(this),[m
[32m+[m[32m                    "date_requested" to currentDateTime,[m
[32m+[m[32m                    "address" to address,[m
[32m+[m[32m                    "location" to GeoPoint(latLong?.lat!!,latLong?.lon!!),[m
[32m+[m[32m                    "glass_weight" to glassAmount,[m
[32m+[m[32m                    "metal_weight" to metalAmount,[m
[32m+[m[32m                    "plastic_weight" to plasticAmount,[m
[32m+[m[32m                    "paper_weight" to paperAmount,[m
[32m+[m[32m                    "accepted_collect_by" to ""[m
[32m+[m[32m                )[m
[32m+[m
[32m+[m[32m                var loadingDialog = LoadingDialog(this)[m
[32m+[m[32m                loadingDialog.show()[m
[32m+[m
[32m+[m[32m                FirebaseFirestore.getInstance().collection("Recycle_Request").add(recycleRequestDocument)[m
[32m+[m[32m                    .addOnSuccessListener {[m
[32m+[m[32m                        loadingDialog.hide()[m
[32m+[m
[32m+[m[32m                        var successDialog = SuccessDialog(this,"Success","You request is made successfully!")[m
[32m+[m[32m                        successDialog.show()[m
[32m+[m[32m                    }[m
[32m+[m[32m                    .addOnFailureListener {[m
[32m+[m[32m                            e ->[m
[32m+[m[32m                        Log.d("error", "Error writing document", e)[m
[32m+[m[32m                        loadingDialog.hide()[m
[32m+[m
[32m+[m[32m                        var errorDialog = ErrorDialog(this,"Oops","Sorry, We have encountered some error when connecting with Firebase.")[m
[32m+[m[32m                        errorDialog.show()[m
[32m+[m[32m                    }[m
[32m+[m
[32m+[m[32m            }else{[m
[32m+[m[32m                var errorDialog = ErrorDialog(this,"Input Error","You must at least recycle some material!")[m
[32m+[m[32m                errorDialog.show()[m
[32m+[m[32m            }[m
[32m+[m[32m        }else{[m
[32m+[m[32m            var errorDialog = ErrorDialog(this,"Input Error","Please select a location first! You can select location by pressing select location button located at the most top of the screen")[m
[32m+[m[32m            errorDialog.show()[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m
 [m
 [m
[32m+[m[32m    }[m
[32m+[m
     private fun linkAllButtonWithOnClickListener() {[m
         //all button with onClick listener should be registered in this list[m
         val actionButtonViewList = listOf([m
[36m@@ -323,7 +413,8 @@[m [mclass RecycleActivity : AppCompatActivity() {[m
             recycle_mapbox_recenter_btn,[m
             btnVolunteerCollection,[m
             btnMyVolunteer,[m
[31m-            btnMyRequest[m
[32m+[m[32m            btnMyRequest,[m
[32m+[m[32m            btnRecycleNow[m
         )[m
 [m
         for (view in actionButtonViewList) {[m
[36m@@ -398,86 +489,49 @@[m [mclass RecycleActivity : AppCompatActivity() {[m
     }[m
 [m
     /**[m
[31m-     * Function use to sync material info edittext with the info textview[m
[32m+[m[32m     * This func is called when user press close Now buttton to sync the collapsed view recycled material quantity with user input[m
      */[m
[31m-    private fun syncMaterialInfoWithEditText() {[m
[31m-[m
[31m-        recyle_metal_edittext.addTextChangedListener(object : TextWatcher {[m
[31m-[m
[31m-            override fun afterTextChanged(s: Editable) {[m
[31m-                //convert to int first then convert to string so that if user key in "0009", we will only show 9[m
[31m-                recycle_metal_info_textview.setText("${s.toString().toInt().toString()} KG")[m
[31m-            }[m
[31m-[m
[31m-            override fun beforeTextChanged([m
[31m-                s: CharSequence, start: Int,[m
[31m-                count: Int, after: Int[m
[31m-            ) {[m
[31m-            }[m
[31m-[m
[31m-            override fun onTextChanged([m
[31m-                s: CharSequence, start: Int,[m
[31m-                before: Int, count: Int[m
[31m-            ) {[m
[31m-            }[m
[31m-        })[m
[31m-        recyle_plastic_edittext.addTextChangedListener(object : TextWatcher {[m
[31m-[m
[31m-            override fun afterTextChanged(s: Editable) {[m
[31m-                //convert to int first then convert to string so that if user key in "0009", we will only show 9[m
[31m-                recycle_plastic_info_textview.setText("${s.toString().toInt().toString()} KG")[m
[31m-            }[m
[31m-[m
[31m-            override fun beforeTextChanged([m
[31m-                s: CharSequence, start: Int,[m
[31m-                count: Int, after: Int[m
[31m-            ) {[m
[31m-            }[m
[31m-[m
[31m-            override fun onTextChanged([m
[31m-                s: CharSequence, start: Int,[m
[31m-                before: Int, count: Int[m
[31m-            ) {[m
[31m-            }[m
[31m-        })[m
[31m-        recyle_paper_edittext.addTextChangedListener(object : TextWatcher {[m
[31m-[m
[31m-            override fun afterTextChanged(s: Editable) {[m
[31m-                //convert to int first then convert to string so that if user key in "0009", we will only show 9[m
[31m-                recycle_paper_info_textview.setText("${s.toString().toInt().toString()} KG")[m
[31m-            }[m
[32m+[m[32m    private fun syncMaterialInfoWithEditText(): Boolean {[m
[32m+[m[32m        var metalQty:String = recyle_metal_edittext.text.toString()[m
[32m+[m[32m        var plasticQty: String = recyle_plastic_edittext.text.toString()[m
[32m+[m[32m        var paperQty: String = recyle_paper_edittext.text.toString()[m
[32m+[m[32m        var glassQty: String = recyle_glass_edittext.text.toString()[m
[32m+[m
[32m+[m[32m        var metalQtyError = ""+ FormUtils.isNull("Metal Quantity",metalQty)[m
[32m+[m[32m        var plasticQtyError = ""+ FormUtils.isNull("Plastic Quantity",plasticQty)[m
[32m+[m[32m        var paperQtyError = ""+ FormUtils.isNull("Paper Quantity",paperQty)[m
[32m+[m[32m        var glassQtyError = ""+ FormUtils.isNull("Glass Quantity",glassQty)[m
[32m+[m
[32m+[m[32m        if(metalQtyError!=""){[m
[32m+[m[32m            recyle_metal_edittext.setError(metalQtyError)[m
[32m+[m[32m        }[m
 [m
[31m-            override fun beforeTextChanged([m
[31m-                s: CharSequence, start: Int,[m
[31m-                count: Int, after: Int[m
[31m-            ) {[m
[31m-            }[m
[32m+[m[32m        if(plasticQtyError!=""){[m
[32m+[m[32m            recyle_plastic_edittext.setError(plasticQtyError)[m
[32m+[m[32m        }[m
 [m
[31m-            override fun onTextChanged([m
[31m-                s: CharSequence, start: Int,[m
[31m-                before: Int, count: Int[m
[31m-            ) {[m
[31m-            }[m
[31m-        })[m
[31m-        recyle_glass_edittext.addTextChangedListener(object : TextWatcher {[m
[32m+[m[32m        if(paperQtyError!=""){[m
[32m+[m[32m            recyle_paper_edittext.setError(paperQtyError)[m
[32m+[m[32m        }[m
 [m
[31m-            override fun afterTextChanged(s: Editable) {[m
[31m-                //convert to int first then convert to string so that if user key in "0009", we will only show 9[m
[31m-                recycle_glass_info_textview.setText("${s.toString().toInt().toString()} KG")[m
[31m-            }[m
[32m+[m[32m        if(glassQtyError!=""){[m
[32m+[m[32m            recyle_glass_edittext.setError(glassQtyError)[m
[32m+[m[32m        }[m
 [m
[31m-            override fun beforeTextChanged([m
[31m-                s: CharSequence, start: Int,[m
[31m-                count: Int, after: Int[m
[31m-            ) {[m
[31m-            }[m
[32m+[m[32m        //if no error[m
[32m+[m[32m        if(metalQtyError+plasticQtyError+paperQtyError+glassQtyError == ""){[m
[32m+[m[32m            //convert to int first then convert to string so that if user key in "0009", we will only show 9[m
[32m+[m[32m            recycle_metal_info_textview.setText("${metalQty.toInt()} KG")[m
[32m+[m[32m            recycle_plastic_info_textview.setText("${plasticQty.toInt()} KG")[m
[32m+[m[32m            recycle_paper_info_textview.setText("${paperQty.toInt()} KG")[m
[32m+[m[32m            recycle_glass_info_textview.setText("${glassQty.toInt()} KG")[m
 [m
[31m-            override fun onTextChanged([m
[31m-                s: CharSequence, start: Int,[m
[31m-                before: Int, count: Int[m
[31m-            ) {[m
[31m-            }[m
[31m-        })[m
[32m+[m[32m            //return success[m
[32m+[m[32m            return true[m
[32m+[m[32m        }else{[m
[32m+[m[32m            ErrorDialog(this,"Input Error","Please complete the form").show()[m
[32m+[m[32m            return false[m
[32m+[m[32m        }[m
     }[m
 [m
     private fun showLocationPanel(yesOrNo: Boolean) {[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/ui/dialog/LoadingDialog.kt b/app/src/main/java/com/oymj/greenearthhero/ui/dialog/LoadingDialog.kt[m
[1mindex 58dbf67..9ed06cf 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/ui/dialog/LoadingDialog.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/ui/dialog/LoadingDialog.kt[m
[36m@@ -6,6 +6,7 @@[m [mimport android.graphics.Color[m
 import android.graphics.drawable.ColorDrawable[m
 import android.os.Bundle[m
 import android.view.Window[m
[32m+[m[32mimport android.view.WindowManager[m
 import com.oymj.greenearthhero.R[m
 [m
 class LoadingDialog(context: Context) : Dialog(context) {[m
[36m@@ -17,6 +18,11 @@[m [mclass LoadingDialog(context: Context) : Dialog(context) {[m
 [m
         //set default background color to transparent[m
         getWindow().setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))[m
[32m+[m[32m        var layoutParam = getWindow().getAttributes()[m
[32m+[m[32m        layoutParam.dimAmount = 0.7f[m
[32m+[m[32m        getWindow().addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND)[m
[32m+[m
[32m+[m[32m        setCanceledOnTouchOutside(false)[m
 [m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/ui/fragment/SearchAddressResultFragment.kt b/app/src/main/java/com/oymj/greenearthhero/ui/fragment/SearchAddressResultFragment.kt[m
[1mindex 61550c5..265c331 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/ui/fragment/SearchAddressResultFragment.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/ui/fragment/SearchAddressResultFragment.kt[m
[36m@@ -2,7 +2,6 @@[m [mpackage com.oymj.greenearthhero.ui.fragment[m
 [m
 import android.graphics.drawable.GradientDrawable[m
 import android.os.Bundle[m
[31m-import android.util.Log[m
 import android.view.LayoutInflater[m
 import android.view.View[m
 import android.view.ViewGroup[m
[36m@@ -10,10 +9,9 @@[m [mimport androidx.fragment.app.Fragment[m
 import androidx.recyclerview.widget.LinearLayoutManager[m
 import androidx.recyclerview.widget.RecyclerView[m
 import com.oymj.greenearthhero.R[m
[31m-import com.oymj.greenearthhero.RecyclerViewOnItemClickListener[m
[31m-import com.oymj.greenearthhero.adapters.FeaturePlacesRecyclerViewAdapter[m
[32m+[m[32mimport com.oymj.greenearthhero.adapters.recyclerview.UniversalAdapter[m
 import com.oymj.greenearthhero.api.ApisImplementation[m
[31m-import com.oymj.greenearthhero.data.FeaturePlaces[m
[32m+[m[32mimport com.oymj.greenearthhero.data.SkeletalEmptyModel[m
 import com.oymj.greenearthhero.data.TomTomPlacesResult[m
 import com.oymj.greenearthhero.data.TomTomPosition[m
 import com.oymj.greenearthhero.utils.LocationUtils[m
[36m@@ -21,10 +19,10 @@[m [mimport com.oymj.greenearthhero.utils.RippleUtil[m
 import kotlinx.android.synthetic.main.fragment_search_address_result.*[m
 [m
 [m
[31m-class SearchAddressResultFragment(var callback:(TomTomPlacesResult)->Unit) : Fragment(), RecyclerViewOnItemClickListener {[m
[32m+[m[32mclass SearchAddressResultFragment(var callback:(TomTomPlacesResult)->Unit) : Fragment() {[m
 [m
[31m-    var placesList = ArrayList<TomTomPlacesResult>()[m
[31m-    lateinit var recyclerViewAdapter: FeaturePlacesRecyclerViewAdapter[m
[32m+[m[32m    var placesList = ArrayList<Any>()[m
[32m+[m[32m    lateinit var recyclerViewAdapter: UniversalAdapter[m
 [m
 [m
     override fun onCreateView(inflater: LayoutInflater,[m
[36m@@ -59,24 +57,28 @@[m [mclass SearchAddressResultFragment(var callback:(TomTomPlacesResult)->Unit) : Fra[m
             callback(currentLocation)[m
         }[m
 [m
[31m-        recyclerViewAdapter = FeaturePlacesRecyclerViewAdapter(placesList,context!!,this)[m
[31m-        myRecyclerView.layoutManager = LinearLayoutManager(view.context)[m
[31m-        myRecyclerView.adapter = recyclerViewAdapter[m
 [m
[31m-    }[m
 [m
[31m-    override fun onItemClick(data:Any) {[m
[31m-        if(data is TomTomPlacesResult){[m
[31m-            callback(data)[m
[32m+[m[32m        recyclerViewAdapter = object: UniversalAdapter(placesList,context!!){[m
[32m+[m[32m            override fun onItemClickedListener(data: Any) {[m
[32m+[m[32m                if(data is TomTomPlacesResult){[m
[32m+[m[32m                    callback(data)[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
         }[m
[32m+[m[32m        myRecyclerView.layoutManager = LinearLayoutManager(view.context)[m
[32m+[m[32m        myRecyclerView.adapter = recyclerViewAdapter[m
[32m+[m
     }[m
 [m
     fun searchAddressFromMapBoxApi(keyword: String){[m
[31m-[m
[32m+[m[32m        placesList.clear()[m
[32m+[m[32m        recyclerViewAdapter.startSkeletalLoading(8)[m
         ApisImplementation().geocodingFromTomTom(context!!,keyword,callback = {[m
             success,response->[m
[32m+[m[32m            recyclerViewAdapter.stopSkeletalLoading()[m
[32m+[m
             if(success){[m
[31m-                placesList.clear()[m
                 placesList.addAll(response?.results!!)[m
                 recyclerViewAdapter.notifyDataSetChanged()[m
 [m
[36m@@ -87,7 +89,6 @@[m [mclass SearchAddressResultFragment(var callback:(TomTomPlacesResult)->Unit) : Fra[m
                     zeroStateContainer.visibility = View.VISIBLE[m
                 }[m
             }else{[m
[31m-                placesList.clear()[m
                 recyclerViewAdapter.notifyDataSetChanged()[m
                 zeroStateContainer.visibility = View.VISIBLE[m
             }[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/utils/FirebaseUtil.kt b/app/src/main/java/com/oymj/greenearthhero/utils/FirebaseUtil.kt[m
[1mnew file mode 100644[m
[1mindex 0000000..5e68c4a[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/utils/FirebaseUtil.kt[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mpackage com.oymj.greenearthhero.utils[m
[32m+[m
[32m+[m[32mimport android.content.Context[m
[32m+[m[32mimport android.content.Intent[m
[32m+[m[32mimport androidx.appcompat.app.AppCompatActivity[m
[32m+[m[32mimport com.google.firebase.auth.FirebaseAuth[m
[32m+[m[32mimport com.oymj.greenearthhero.ui.activity.LoginActivity[m
[32m+[m
[32m+[m[32mobject FirebaseUtil {[m
[32m+[m
[32m+[m[32m    fun getUserIdAndRedirectToLoginIfNotFound(context: Context): String?{[m
[32m+[m[32m        return if(FirebaseAuth.getInstance().currentUser?.uid != null){[m
[32m+[m[32m            FirebaseAuth.getInstance().currentUser?.uid[m
[32m+[m[32m        }else{[m
[32m+[m[32m            (context as AppCompatActivity).finish()[m
[32m+[m[32m            context.startActivity(Intent(context, LoginActivity::class.java))[m
[32m+[m[32m            null[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/utils/FormUtils.kt b/app/src/main/java/com/oymj/greenearthhero/utils/FormUtils.kt[m
[1mindex 48bf8c3..9d68248 100644[m
[1m--- a/app/src/main/java/com/oymj/greenearthhero/utils/FormUtils.kt[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/utils/FormUtils.kt[m
[36m@@ -10,7 +10,7 @@[m [mobject FormUtils {[m
             error = "$name cannot be empty!"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
         }[m
     }[m
 [m
[36m@@ -20,7 +20,7 @@[m [mobject FormUtils {[m
             error = "$name must have character amount between $minLength and $maxLength!"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
         }[m
     }[m
 [m
[36m@@ -32,7 +32,7 @@[m [mobject FormUtils {[m
             error = "$name can only contain alphabet character"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
         }[m
     }[m
 [m
[36m@@ -44,7 +44,7 @@[m [mobject FormUtils {[m
             error = "$name can only contain number"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
         }[m
     }[m
 [m
[36m@@ -55,7 +55,7 @@[m [mobject FormUtils {[m
             error = "Email is not valid"[m
             return error[m
         }else{[m
[31m-            return null[m
[32m+[m[32m            return ""[m
         }[m
     }[m
 [m
[36m@@ -63,7 +63,7 @@[m [mobject FormUtils {[m
         return if(!Pattern.compile(regex).matcher(input).matches()){[m
             errorMessage[m
         }else{[m
[31m-            null[m
[32m+[m[32m            ""[m
         }[m
     }[m
 [m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/utils/MapboxManager.kt b/app/src/main/java/com/oymj/greenearthhero/utils/MapboxManager.kt[m
[1mnew file mode 100644[m
[1mindex 0000000..0fde26c[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/utils/MapboxManager.kt[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32mpackage com.oymj.greenearthhero.utils[m
[32m+[m
[32m+[m[32mimport android.content.Context[m
[32m+[m[32mimport android.graphics.Bitmap[m
[32m+[m[32mimport android.graphics.Canvas[m
[32m+[m[32mimport android.graphics.drawable.BitmapDrawable[m
[32m+[m[32mimport android.graphics.drawable.Drawable[m
[32m+[m[32mimport android.util.Log[m
[32m+[m[32mimport androidx.annotation.DrawableRes[m
[32m+[m[32mimport com.mapbox.mapboxsdk.maps.Style[m
[32m+[m[32mimport com.oymj.greenearthhero.R[m
[32m+[m
[32m+[m
[32m+[m[32mobject MapboxManager {[m
[32m+[m[32m    const val ID_LOCATION_ICON = "locationicon"[m
[32m+[m
[32m+[m[32m    fun getMapBoxStyle(context: Context): Style.Builder {[m
[32m+[m[32m        return Style.Builder()[m
[32m+[m[32m            .fromUri(Style.MAPBOX_STREETS)[m
[32m+[m[32m            .withImage(ID_LOCATION_ICON, generateBitmap(context,R.drawable.location_icon)!!,false)[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private fun generateBitmap(context: Context, @DrawableRes drawableRes: Int): Bitmap? {[m
[32m+[m[32m        val drawable: Drawable = context.getResources().getDrawable(drawableRes)[m
[32m+[m[32m        return getBitmapFromDrawable(drawable)[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private fun getBitmapFromDrawable(drawable: Drawable): Bitmap? {[m
[32m+[m[32m        return if (drawable is BitmapDrawable) {[m
[32m+[m[32m            drawable.bitmap[m
[32m+[m[32m        } else {[m
[32m+[m[32m            // width and height are equal for all assets since they are ovals.[m
[32m+[m[32m            val bitmap = Bitmap.createBitmap([m
[32m+[m[32m                drawable.intrinsicWidth,[m
[32m+[m[32m                drawable.intrinsicHeight, Bitmap.Config.ARGB_8888[m
[32m+[m[32m            )[m
[32m+[m[32m            val canvas = Canvas(bitmap)[m
[32m+[m[32m            drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight())[m
[32m+[m[32m            drawable.draw(canvas)[m
[32m+[m[32m            bitmap[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/oymj/greenearthhero/utils/RippleUtil.kt b/app/src/main/java/com/oymj/greenearthhero/utils/RippleUtil.kt[m
[1mnew file mode 100644[m
[1mindex 0000000..e1f54d8[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/oymj/greenearthhero/utils/RippleUtil.kt[m
[36m@@ -0,0 +1,159 @@[m
[32m+[m[32mpackage com.oymj.greenearthhero.utils[m
[32m+[m
[32m+[m[32mimport android.content.Context[m
[32m+[m[32mimport android.content.res.ColorStateList[m
[32m+[m[32mimport android.graphics.drawable.*[m
[32m+[m[32mimport android.graphics.drawable.shapes.OvalShape[m
[32m+[m[32mimport android.graphics.drawable.shapes.RoundRectShape[m
[32m+[m[32mimport android.graphics.drawable.shapes.Shape[m
[32m+[m[32mimport android.os.Build[m
[32m+[m[32mimport androidx.annotation.ColorInt[m
[32m+[m[32mimport androidx.core.content.ContextCompat[m
[32m+[m[32mimport com.oymj.greenearthhero.R[m
[32m+[m[32mimport java.util.*[m
[32m+[m
[32m+[m[32mobject RippleUtil {[m
[32m+[m[32m    const val SHAPE_OVAL = GradientDrawable.OVAL[m
[32m+[m[32m    const val SHAPE_RECTANGLE = GradientDrawable.RECTANGLE[m
[32m+[m[32m    const val SHAPE_RING = GradientDrawable.RING[m
[32m+[m
[32m+[m[32m    fun getRippleButtonOutlineDrawable(context : Context, @ColorInt normalColor : Int, @ColorInt pressedColor : Int, @ColorInt outlineColor : Int, cornerRadius : Float = 0f, outlineThickness : Int = 3) : Drawable {[m
[32m+[m
[32m+[m[32m        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP){[m
[32m+[m[32m            return RippleDrawable([m
[32m+[m[32m                ColorStateList.valueOf(pressedColor),[m
[32m+[m[32m                getStateListDrawableOutline([m
[32m+[m[32m                    GradientDrawable.RECTANGLE,[m
[32m+[m[32m                    normalColor,[m
[32m+[m[32m                    normalColor,[m
[32m+[m[32m                    outlineColor,[m
[32m+[m[32m                    cornerRadius,[m
[32m+[m[32m                    outlineThickness[m
[32m+[m[32m                ),[m
[32m+[m[32m                getRippleMask(ContextCompat.getColor(context, R.color.white), cornerRadius, SHAPE_RECTANGLE)[m
[32m+[m[32m            )[m
[32m+[m[32m        }[m
[32m+[m[32m        else{[m
[32m+[m[32m            return getStateListDrawableOutline([m
[32m+[m[32m                GradientDrawable.RECTANGLE,[m
[32m+[m[32m                normalColor,[m
[32m+[m[32m                pressedColor,[m
[32m+[m[32m                outlineColor,[m
[32m+[m[32m                cornerRadius,[m
[32m+[m[32m                outlineThickness[m
[32m+[m[32m            )[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    fun getGradientRippleButtonOutlineDrawable(context : Context, @ColorInt startColor: Int, endColor : Int, @ColorInt pressedColor : Int, @ColorInt outlineStartColor : Int, @ColorInt outlineEndColor : Int, cornerRadius : Float = 0f, outlineThickness : Int = 3, orientation : GradientDrawable.Orientation = GradientDrawable.Orientation.BL_TR) : Drawable {[m
[32m+[m[32m        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP){[m
[32m+[m[32m            val rippleDrawable = RippleDrawable(ColorStateList.valueOf(pressedColor),[m
[32m+[m[32m                getGradientOutlineDrawable(startColor, endColor, outlineStartColor, outlineEndColor, SHAPE_RECTANGLE, outlineThickness, GradientDrawable.Orientation.BL_TR, cornerRadius),[m
[32m+[m[32m                getRippleMask(ContextCompat.getColor(context, R.color.white), cornerRadius, SHAPE_RECTANGLE)[m
[32m+[m[32m            )[m
[32m+[m[32m            return rippleDrawable[m
[32m+[m[32m        }[m
[32m+[m[32m        else{[m
[32m+[m[32m            return getStateListDrawableOutline([m
[32m+[m[32m                GradientDrawable.RECTANGLE,[m
[32m+[m[32m                startColor,[m
[32m+[m[32m                pressedColor,[m
[32m+[m[32m                outlineStartColor,[m
[32m+[m[32m                cornerRadius,[m
[32m+[m[32m                outlineThickness[m
[32m+[m[32m            )[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    fun getGradientOutlineDrawable(@ColorInt innerStartColor: Int, innerEndColor : Int, @ColorInt outlineStartColor: Int, @ColorInt outlineEndColor: Int, shape: Int, outlineThickness: Int, angle : GradientDrawable.Orientation, cornerRadius: Float) : Drawable{[m
[32m+[m
[32m+[m[32m        val outlineDrawable = GradientDrawable(angle, intArrayOf(outlineStartColor, outlineEndColor))[m
[32m+[m
[32m+[m[32m        val innerDrawable = GradientDrawable(angle, intArrayOf(innerStartColor, innerEndColor))[m
[32m+[m
[32m+[m[32m        if(shape == SHAPE_OVAL){[m
[32m+[m[32m            outlineDrawable.shape = GradientDrawable.OVAL[m
[32m+[m[32m            innerDrawable.shape = GradientDrawable.OVAL[m
[32m+[m[32m        }[m
[32m+[m[32m        else{[m
[32m+[m[32m            outlineDrawable.shape = GradientDrawable.RECTANGLE[m
[32m+[m[32m            outlineDrawable.cornerRadius = cornerRadius[m
[32m+[m[32m            innerDrawable.cornerRadius = cornerRadius - outlineThickness[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        val layerDrawable = LayerDrawable(arrayOf(outlineDrawable, innerDrawable))[m
[32m+[m
[32m+[m
[32m+[m[32m        if(outlineThickness >= 0) {[m
[32m+[m[32m            layerDrawable.setLayerInset([m
[32m+[m[32m                1,[m
[32m+[m[32m                outlineThickness,[m
[32m+[m[32m                outlineThickness,[m
[32m+[m[32m                outlineThickness,[m
[32m+[m[32m                outlineThickness[m
[32m+[m[32m            )[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return layerDrawable[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private fun getStateListDrawableOutline(shape : Int, @ColorInt normalColor: Int, @ColorInt pressedColor: Int, @ColorInt outlineColor: Int, cornerRadius : Float = 0f, outlineThickness: Int = 3, dashWidth: Int = 0, dashGap : Int = 0): StateListDrawable {[m
[32m+[m[32m        val states = StateListDrawable()[m
[32m+[m
[32m+[m[32m        val pressedDrawable = GradientDrawable()[m
[32m+[m[32m        val normalDrawable = GradientDrawable()[m
[32m+[m
[32m+[m[32m        pressedDrawable.setColor(pressedColor)[m
[32m+[m[32m        normalDrawable.setColor(normalColor)[m
[32m+[m
[32m+[m[32m        if(shape == SHAPE_OVAL){[m
[32m+[m[32m            pressedDrawable.shape = GradientDrawable.OVAL[m
[32m+[m[32m            normalDrawable.shape = GradientDrawable.OVAL[m
[32m+[m[32m        }[m
[32m+[m[32m        else{[m
[32m+[m[32m            pressedDrawable.shape = GradientDrawable.RECTANGLE[m
[32m+[m[32m            normalDrawable.shape = GradientDrawable.RECTANGLE[m
[32m+[m[32m            pressedDrawable.cornerRadius = cornerRadius[m
[32m+[m[32m            normalDrawable.cornerRadius = cornerRadius[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if(dashWidth <= 0 && dashGap <= 0) {[m
[32m+[m[32m            pressedDrawable.setStroke(outlineThickness, outlineColor)[m
[32m+[m[32m            normalDrawable.setStroke(outlineThickness, outlineColor)[m
[32m+[m[32m        }[m
[32m+[m[32m        else{[m
[32m+[m[32m            pressedDrawable.setStroke(outlineThickness, outlineColor, dashWidth.toFloat(), dashGap.toFloat())[m
[32m+[m[32m            normalDrawable.setStroke(outlineThickness, outlineColor, dashWidth.toFloat(), dashGap.toFloat())[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        states.addState(intArrayOf(android.R.attr.state_pressed), pressedDrawable)[m
[32m+[m[32m        states.addState(intArrayOf(android.R.attr.state_focused), pressedDrawable)[m
[32m+[m[32m        states.addState(intArrayOf(android.R.attr.state_activated), pressedDrawable)[m
[32m+[m[32m        states.addState(intArrayOf(), normalDrawable)[m
[32m+[m[32m        return states[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private fun getRippleMask(color: Int, cornerRadius : Float = 0f, shapeType : Int = SHAPE_RECTANGLE): Drawable {[m
[32m+[m
[32m+[m[32m        val outerRadii = FloatArray(8)[m
[32m+[m[32m        Arrays.fill(outerRadii, cornerRadius)[m
[32m+[m
[32m+[m[32m        val shape : Shape[m
[32m+[m[32m        if(shapeType == SHAPE_RECTANGLE){[m
[32m+[m[32m            shape = RoundRectShape(outerRadii, null, null)[m
[32m+[m[32m        }[m
[32m+[m[32m        else if(shapeType == SHAPE_OVAL){[m
[32m+[m[32m            shape = OvalShape()[m
[32m+[m[32m        }[m
[32m+[m[32m        else{[m
[32m+[m[32m            shape = RoundRectShape(outerRadii, null, null)[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        val shapeDrawable = ShapeDrawable(shape)[m
[32m+[m[32m        shapeDrawable.paint.color = color[m
[32m+[m[32m        return shapeDrawable[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/activity_recycle.xml b/app/src/main/res/layout/activity_recycle.xml[m
[1mindex da090a0..aa8b08a 100644[m
[1m--- a/app/src/main/res/layout/activity_recycle.xml[m
[1m+++ b/app/src/main/res/layout/activity_recycle.xml[m
[36m@@ -102,7 +102,7 @@[m
         <TextView[m
             android:id="@+id/recycle_request_location_label"[m
             android:layout_width="0dp"[m
[31m-            android:layout_height="0dp"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
             android:clickable="true"[m
             app:layout_constraintLeft_toRightOf="@id/recycle_menu_icon"[m
             app:layout_constraintRight_toLeftOf="@id/guideline11"[m
[1mdiff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml[m
[1mindex d6e6f68..d1d6eda 100644[m
[1m--- a/app/src/main/res/values/colors.xml[m
[1m+++ b/app/src/main/res/values/colors.xml[m
[36m@@ -10,6 +10,7 @@[m
     <color name="slightdarkgreen">#37B734</color>[m
     <color name="darkgreen">#1B7713</color>[m
     <color name="lightgrey">#7A7C79</color>[m
[32m+[m[32m    <color name="lightestgrey">#E0DADA</color>[m
     <color name="darkgrey">#515151</color>[m
 [m
     <color name="mapboxGreen">#1B7713</color>[m
